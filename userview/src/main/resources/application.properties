spring.application.name=user-view
server.port=8700

#Consul 的地址和端口号默认是 localhost:8500 ，如果不是这个地址可以自行配置。
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500

#注册到consul的服务名称
spring.cloud.consul.discovery.serviceName=user-view

#因为只是消费者，不提供服务，所以设不注册到Consul 中
#spring.cloud.consul.discovery.register=false

#访问，则显示如下日志（Logging 配置的级别有7个：TRACE , DEBUG , INFO , WARN , ERROR , FATAL , OFF，配置格式：logging.level.ROOT=INFO）
logging.level.ROOT=info
# com.yang.userview.rpc: 记录日志的包
logging.level.com.yang.userview.rpc=DEBUG

## 负载均衡策略
#user-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

## ribbon 重试  重试可能导致重复提交（如果用get请求提交数据）
spring.cloud.loadbalancer.retry.enabled=false
# 毫秒 Ribbon的连接超时时间
user-service.ribbon.ConnectTimeout=250
# 毫秒 Ribbon的数据读取超时时间
user-service.ribbon.ReadTimeout=1000
# 是否对所有操作都进行重试
user-service.ribbon.OkToRetryOnAllOperations=false
# 切换实例的重试次数
user-service.ribbon.MaxAutoRetriesNextServer=0
# 对当前实例的重试次数
user-service.ribbon.MaxAutoRetries=0

feign.hystrix.enabled=true
# Ribbon超时与Hystrix超时问题，为了确保Ribbon重试的时候不被熔断，我们就需要让Hystrix的超时时间大于Ribbon的超时时间，
# 否则Hystrix命令超时后，该命令直接熔断，重试机制就没有任何意义了
# 所以hystrix的超时时间要大于
# (RibbonReadTimeout + RibbonConnectTimeout) * (MaxAutoRetries + 1) * (MaxAutoRetriesNextServer + 1)  比较好，
# 具体看需求进行配置。
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=8000

## actuator 暴露所有端点
management.endpoints.web.exposure.include=*
## 显示健康具体信息
management.endpoint.health.show-details=always